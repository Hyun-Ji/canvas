define("a/1.0.0/handlebars", ["a/1.0.0/test.handlebars", "handlebars/1.3.0/handlebars"], function (require, exports, module) {
  require("a/1.0.0/test.handlebars");

});
define("a/1.0.0/test.handlebars", ["handlebars/1.3.0/handlebars"], function (require, exports, module) {
  var Handlebars = require("handlebars/1.3.0/handlebars");
  module.exports = Handlebars.template(function (Handlebars, depth0, helpers, partials, data) {
    this.compilerInfo = [4, '>= 1.0.0'];
    helpers = this.merge(helpers, Handlebars.helpers);
    data = data || {};
    var buffer = "",
        stack1, functionType = "function",
        escapeExpression = this.escapeExpression,
        self = this;

    function program1(depth0, data) {

      var buffer = "",
          stack1, helper;
      buffer += "\n  <li>";
      if (helper = helpers.repo) {
        stack1 = helper.call(depth0, {
          hash: {},
          data: data
        });
      }
      else {
        helper = (depth0 && depth0.repo);
        stack1 = typeof helper === functionType ? helper.call(depth0, {
          hash: {},
          data: data
        }) : helper;
      }
      buffer += escapeExpression(stack1) + "</li>\n";
      return buffer;
    }

    buffer += "<ul>\n";
    stack1 = helpers.each.call(depth0, (depth0 && depth0.org), {
      hash: {},
      inverse: self.noop,
      fn: self.program(1, program1, data),
      data: data
    });
    if (stack1 || stack1 === 0) {
      buffer += stack1;
    }
    buffer += "\n</ul>\n";
    return buffer;
  });
});
